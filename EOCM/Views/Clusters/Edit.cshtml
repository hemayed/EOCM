@model EOCM.Models.Cluster

@{
    ViewBag.Title = "تعديل بيانات التجمع";
}

<div style="font-family:Arial; text-align: center; direction: rtl; color:white">
    <h2>تعديل بيانات التجمع</h2>
 </div>


    @using (Html.BeginForm("Edit", "Clusters", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

      
           
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Cluster_ID)

    <div class="form-horizontal" style="direction:rtl; background-color:white; position:center; width:800px; text-align:center; margin:auto;">
        <br/>
        <div class="form-group">
            @Html.LabelFor(model => model.Cluster_Name, htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-5" })
            <div class="col-md-5 ">
                @Html.EditorFor(model => model.Cluster_Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cluster_Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Govt_ID, htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-5" })
            <div class="col-md-5">
                @Html.DropDownList("Govt_ID", null, "اختار المحافظة", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Govt_ID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.District_ID, htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-5" })
            <div class="col-md-5">
                @Html.DropDownList("District_ID", null, "اختار المركز/المدينة", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.District_ID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Village_ID, htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-5" })
            <div class="col-md-5">
                @Html.DropDownList("Village_ID", null, "اختار القرية", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Village_ID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Sector_ID, htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-5" })
            <div class="col-md-5">
                @Html.DropDownList("Sector_ID", null, "اختار القطاع", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Sector_ID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Field_ID, htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-5" })
            <div class="col-md-5">
                @Html.DropDownList("Field_ID", null, "اختار النشاط", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Field_ID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Product_ID, htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-5" })
            <div class="col-md-5">
                @Html.DropDownList("Product_ID", null, "اختار المنتج", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Product_ID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Products, htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Products, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Products, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.MoreProducts, htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.MoreProducts, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MoreProducts, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Cluster_Lat, htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Cluster_Lat, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cluster_Lat, (string)ViewBag.ValidationSummary, new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Cluster_Long, htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Cluster_Long, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cluster_Long, (string)ViewBag.ValidationSummary, new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Cluster_ShopNumMin, htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-5" })
            <div class="col-md-2">
              
                @Html.EditorFor(model => model.Cluster_ShopNumMin, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cluster_ShopNumMin, "", new { @class = "text-danger" })
            </div>

           
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Cluster_EmpNumMin, htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-5" })

            <div class="col-md-2">
               
                @Html.EditorFor(model => model.Cluster_EmpNumMin, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cluster_EmpNumMin, "", new { @class = "text-danger" })
            </div>


          
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cluster_EmpFemale, htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Cluster_EmpFemale, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cluster_EmpFemale, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.OfficalProjects, htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.OfficalProjects, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OfficalProjects, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.NonOfficalProjects, htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.NonOfficalProjects, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NonOfficalProjects, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CompanyPercent1, htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.CompanyPercent1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CompanyPercent1, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CompanyPercent2, htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.CompanyPercent2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CompanyPercent2, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CompanyPercent3, htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.CompanyPercent3, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CompanyPercent3, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CompanyPercent4, htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.CompanyPercent4, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CompanyPercent4, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ClusterNature_ID, htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-5" })
            <div class="col-md-5">
                @Html.DropDownList("ClusterNature_ID", null, "", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ClusterNature_ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClusterType_ID, htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-5" })
            <div class="col-md-5">
                @Html.DropDownList("ClusterType_ID", null, "", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ClusterType_ID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.MarketType_ID, htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-5" })
            <div class="col-md-5">
                @Html.DropDownList("MarketType_ID", null, "", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MarketType_ID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ProductSeason_ID, htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-5" })
            <div class="col-md-5">
                @Html.DropDownList("ProductSeason_ID", null, "", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProductSeason_ID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ProductSeasonDetail, htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.ProductSeasonDetail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductSeasonDetail, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ExportFlag_ID, htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-5" })
            <div class="col-md-5">
                @Html.DropDownList("ExportFlag_ID", null, "", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ExportFlag_ID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ExportVolume, htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.ExportVolume, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExportVolume, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IncomeLevel_ID, htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-5" })
            <div class="col-md-5">
                @Html.DropDownList("IncomeLevel_ID", null, "", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IncomeLevel_ID, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.Income, htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Income, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Income, "", new { @class = "text-danger" })
            </div>
        </div>*@
        <div class="form-group">
            @Html.LabelFor(model => model.SupportingOrg, htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.SupportingOrg, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SupportingOrg, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Challenges, htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Challenges, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Challenges, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.MoreChallenges, htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.MoreChallenges, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MoreChallenges, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Cluster_DetailPage1, htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Cluster_DetailPage1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cluster_DetailPage1, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Cluster_DetailPage2, htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Cluster_DetailPage2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cluster_DetailPage2, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Cluster_DetailPage3, htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Cluster_DetailPage3, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cluster_DetailPage3, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Cluster_StudyFile1, htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-5" })
            <div class="col-md-5">
                @Html.TextBoxFor(model => model.Cluster_StudyFile1, new { type = "file" })
                @Html.ValidationMessageFor(model => model.Cluster_StudyFile1)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Cluster_StudyFile2, htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-5" })
            <div class="col-md-5">
                @Html.TextBoxFor(model => model.Cluster_StudyFile2, new { type = "file" })
                @Html.ValidationMessageFor(model => model.Cluster_StudyFile2)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cluster_ProductImage, htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-5" })
            <div class="col-md-5">
                @Html.TextBoxFor(model => model.Cluster_ProductImage, new { type = "file" })
                @Html.ValidationMessageFor(model => model.Cluster_ProductImage)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Cluster_ProcessImage, htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-5" })
            <div class="col-md-5">
                @Html.TextBoxFor(model => model.Cluster_ProcessImage, new { type = "file" })
                @Html.ValidationMessageFor(model => model.Cluster_ProcessImage)
            </div>

        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.AdditionalInfo, htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.AdditionalInfo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AdditionalInfo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-4 col-md-5">
                <input type="submit" value="حفظ التعديلات" class="btn btn-default" />
                <br />
                @Html.ActionLink("عودة للقائمة الرئيسية", "Index")
            </div>
        </div>
    </div>
    }

    <div>
      
    </div>

    <script>

        $(document).ready(function () {


            $('#Govt_ID').change(function () {
                UpdateDistricts($('#Govt_ID'), $('#District_ID'), "اختار المركز-المدينة", $('#Village_ID'), "اختار القرية")
            });

            $('#District_ID').change(function () {
                UpdateVillages($('#District_ID'), $('#Village_ID'), "اختار القرية")
            });

            $('#Sector_ID').change(function () {
                UpdateFields($('#Sector_ID'), $('#Field_ID'), $('#Product_ID'), "اختار النشاط")
            });

            $('#Field_ID').change(function () {
                UpdateProducts($('#Field_ID'), $('#Product_ID'), "اختار المنتج")
            });

        });


    </script>
